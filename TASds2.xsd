<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TASds2" targetNamespace="http://tempuri.org/TASds2.xsd" xmlns:mstns="http://tempuri.org/TASds2.xsd" xmlns="http://tempuri.org/TASds2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" GeneratorFunctionsComponentClassName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QueriesTableAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TASConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TASConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.PnF_MktAssessment._2017.App.Properties.Settings.GlobalReference.Default.TASConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="dtPNFDailyIndicatorsTableAdapter" GeneratorDataComponentClassName="dtPNFDailyIndicatorsTableAdapter" Name="dtPNFDailyIndicators" UserDataComponentName="dtPNFDailyIndicatorsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TASConnectionString (Settings)" DbObjectName="TAS.pnf.DailyReadings_PrimaryPNFIndicators" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [DailyReadings_PrimaryPNFIndicators] WHERE (([ReadingDate] = @Original_ReadingDate) AND ([SymbolID] = @Original_SymbolID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_ReadingDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ReadingDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SymbolID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SymbolID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [DailyReadings_PrimaryPNFIndicators] ([ReadingDate], [SymbolID], [Indicator], [IndicatorHasChanged], [IsInRedZone], [IsBreakout], [IsPullBack]) VALUES (@ReadingDate, @SymbolID, @Indicator, @IndicatorHasChanged, @IsInRedZone, @IsBreakout, @IsPullBack)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@ReadingDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ReadingDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SymbolID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SymbolID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Indicator" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Indicator" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IndicatorHasChanged" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IndicatorHasChanged" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsInRedZone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsInRedZone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsBreakout" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsBreakout" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsPullBack" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsPullBack" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        ReadingID, ReadingDate, SymbolID, Indicator, IndicatorHasChanged, IsInRedZone, IsBreakout, IsPullBack
FROM            DailyReadings_PrimaryPNFIndicators AS a</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [DailyReadings_PrimaryPNFIndicators] SET [ReadingDate] = @ReadingDate, [SymbolID] = @SymbolID, [Indicator] = @Indicator, [IndicatorHasChanged] = @IndicatorHasChanged, [IsInRedZone] = @IsInRedZone, [IsBreakout] = @IsBreakout, [IsPullBack] = @IsPullBack WHERE (([ReadingDate] = @Original_ReadingDate) AND ([SymbolID] = @Original_SymbolID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@ReadingDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ReadingDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SymbolID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SymbolID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Indicator" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Indicator" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IndicatorHasChanged" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IndicatorHasChanged" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsInRedZone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsInRedZone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsBreakout" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsBreakout" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsPullBack" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsPullBack" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_ReadingDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ReadingDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SymbolID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SymbolID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ReadingID" DataSetColumn="ReadingID" />
              <Mapping SourceColumn="ReadingDate" DataSetColumn="ReadingDate" />
              <Mapping SourceColumn="SymbolID" DataSetColumn="SymbolID" />
              <Mapping SourceColumn="Indicator" DataSetColumn="Indicator" />
              <Mapping SourceColumn="IndicatorHasChanged" DataSetColumn="IndicatorHasChanged" />
              <Mapping SourceColumn="IsInRedZone" DataSetColumn="IsInRedZone" />
              <Mapping SourceColumn="IsBreakout" DataSetColumn="IsBreakout" />
              <Mapping SourceColumn="IsPullBack" DataSetColumn="IsPullBack" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="TASConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>select a.*, b.Symbol, c.*
from pnf.DailyReadings_PrimaryPNFIndicators a
JOIN pnf.Symbols b on a.SymbolID = b.SymbolID
LEFT JOIN pnf.DailyReadings_HeatIndicator c on a.ReadingID = c.DailyReadingID</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="dtSymbolsTableAdapter" GeneratorDataComponentClassName="dtSymbolsTableAdapter" Name="dtSymbols" UserDataComponentName="dtSymbolsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TASConnectionString (Settings)" DbObjectName="TAS.pnf.Symbols" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        pnf.Symbols.SymbolID, pnf.Symbols.Symbol, pnf.Symbols.SymbolDescr, pnf.Symbols.SymbolTypeID
FROM            pnf.Symbols INNER JOIN
                         pnf.SymbolTypes ON pnf.Symbols.SymbolTypeID = pnf.SymbolTypes.SymbolTypeID</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SymbolID" DataSetColumn="SymbolID" />
              <Mapping SourceColumn="Symbol" DataSetColumn="Symbol" />
              <Mapping SourceColumn="SymbolDescr" DataSetColumn="SymbolDescr" />
              <Mapping SourceColumn="SymbolTypeID" DataSetColumn="SymbolTypeID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="TASConnectionString (Settings)" DbObjectName="TAS.pnf.Symbols" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByPrimaryIndicators" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByPrimaryIndicators" GeneratorSourceName="FillByPrimaryIndicators" GetMethodModifier="Public" GetMethodName="GetDataByPrimaryIndicators" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByPrimaryIndicators" UserSourceName="FillByPrimaryIndicators">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        pnf.Symbols.SymbolID, pnf.Symbols.Symbol, pnf.Symbols.SymbolDescr, pnf.Symbols.SymbolTypeID
FROM            pnf.Symbols INNER JOIN
                         pnf.SymbolTypes ON pnf.Symbols.SymbolTypeID = pnf.SymbolTypes.SymbolTypeID
where pnf.Symbols .SymbolTypeID = 1</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="TASConnectionString (Settings)" DbObjectName="TAS.pnf.Symbols" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBySectors" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBySectors" GeneratorSourceName="FillBySectors" GetMethodModifier="Public" GetMethodName="GetDataBySectors" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBySectors" UserSourceName="FillBySectors">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        pnf.Symbols.SymbolID, pnf.Symbols.Symbol, pnf.Symbols.SymbolDescr, pnf.Symbols.SymbolTypeID
FROM            pnf.Symbols INNER JOIN
                         pnf.SymbolTypes ON pnf.Symbols.SymbolTypeID = pnf.SymbolTypes.SymbolTypeID
where pnf.Symbols.SymbolTypeID = 2</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DailyReadingsTableAdapter" GeneratorDataComponentClassName="DailyReadingsTableAdapter" Name="DailyReadings" UserDataComponentName="DailyReadingsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TASConnectionString (Settings)" DbObjectName="TAS.pnf.DailyReadings_PrimaryPNFIndicators" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [DailyReadings_PrimaryPNFIndicators] WHERE (([ReadingID] = @Original_ReadingID) AND ([ReadingDate] = @Original_ReadingDate) AND ([SymbolID] = @Original_SymbolID) AND ([Indicator] = @Original_Indicator) AND ([IndicatorHasChanged] = @Original_IndicatorHasChanged) AND ([IsInRedZone] = @Original_IsInRedZone) AND ([IsBreakout] = @Original_IsBreakout) AND ([IsPullBack] = @Original_IsPullBack))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ReadingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReadingID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_ReadingDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ReadingDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SymbolID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SymbolID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Indicator" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Indicator" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IndicatorHasChanged" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IndicatorHasChanged" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsInRedZone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsInRedZone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsBreakout" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsBreakout" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsPullBack" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsPullBack" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [DailyReadings_PrimaryPNFIndicators] ([ReadingDate], [SymbolID], [Indicator], [IndicatorHasChanged], [IsInRedZone], [IsBreakout], [IsPullBack]) VALUES (@ReadingDate, @SymbolID, @Indicator, @IndicatorHasChanged, @IsInRedZone, @IsBreakout, @IsPullBack);
SELECT ReadingID, ReadingDate, SymbolID, Indicator, IndicatorHasChanged, IsInRedZone, IsBreakout, IsPullBack FROM DailyReadings_PrimaryPNFIndicators WHERE (ReadingDate = @ReadingDate) AND (SymbolID = @SymbolID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@ReadingDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ReadingDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SymbolID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SymbolID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Indicator" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Indicator" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IndicatorHasChanged" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IndicatorHasChanged" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsInRedZone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsInRedZone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsBreakout" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsBreakout" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsPullBack" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsPullBack" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        ReadingID, ReadingDate, SymbolID, Indicator, IndicatorHasChanged, IsInRedZone, IsBreakout, IsPullBack
FROM            DailyReadings_PrimaryPNFIndicators</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [DailyReadings_PrimaryPNFIndicators] SET [ReadingDate] = @ReadingDate, [SymbolID] = @SymbolID, [Indicator] = @Indicator, [IndicatorHasChanged] = @IndicatorHasChanged, [IsInRedZone] = @IsInRedZone, [IsBreakout] = @IsBreakout, [IsPullBack] = @IsPullBack WHERE (([ReadingID] = @Original_ReadingID) AND ([ReadingDate] = @Original_ReadingDate) AND ([SymbolID] = @Original_SymbolID) AND ([Indicator] = @Original_Indicator) AND ([IndicatorHasChanged] = @Original_IndicatorHasChanged) AND ([IsInRedZone] = @Original_IsInRedZone) AND ([IsBreakout] = @Original_IsBreakout) AND ([IsPullBack] = @Original_IsPullBack));
SELECT ReadingID, ReadingDate, SymbolID, Indicator, IndicatorHasChanged, IsInRedZone, IsBreakout, IsPullBack FROM DailyReadings_PrimaryPNFIndicators WHERE (ReadingDate = @ReadingDate) AND (SymbolID = @SymbolID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@ReadingDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ReadingDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SymbolID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SymbolID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Indicator" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Indicator" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IndicatorHasChanged" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IndicatorHasChanged" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsInRedZone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsInRedZone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsBreakout" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsBreakout" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsPullBack" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsPullBack" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ReadingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReadingID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_ReadingDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ReadingDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SymbolID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SymbolID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Indicator" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Indicator" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IndicatorHasChanged" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IndicatorHasChanged" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsInRedZone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsInRedZone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsBreakout" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsBreakout" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsPullBack" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsPullBack" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ReadingID" DataSetColumn="ReadingID" />
              <Mapping SourceColumn="ReadingDate" DataSetColumn="ReadingDate" />
              <Mapping SourceColumn="SymbolID" DataSetColumn="SymbolID" />
              <Mapping SourceColumn="Indicator" DataSetColumn="Indicator" />
              <Mapping SourceColumn="IndicatorHasChanged" DataSetColumn="IndicatorHasChanged" />
              <Mapping SourceColumn="IsInRedZone" DataSetColumn="IsInRedZone" />
              <Mapping SourceColumn="IsBreakout" DataSetColumn="IsBreakout" />
              <Mapping SourceColumn="IsPullBack" DataSetColumn="IsPullBack" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DailyReadings_HeatIndicatorTableAdapter" GeneratorDataComponentClassName="DailyReadings_HeatIndicatorTableAdapter" Name="DailyReadings_HeatIndicator" UserDataComponentName="DailyReadings_HeatIndicatorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TASConnectionString (Settings)" DbObjectName="TAS.pnf.DailyReadings_HeatIndicator" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [pnf].[DailyReadings_HeatIndicator] WHERE (([HeatIndicator_Value] = @Original_HeatIndicator_Value) AND ([DailyReadingID] = @Original_DailyReadingID) AND ([HeatIndicatorID] = @Original_HeatIndicatorID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_HeatIndicator_Value" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="HeatIndicator_Value" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DailyReadingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DailyReadingID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_HeatIndicatorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HeatIndicatorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [pnf].[DailyReadings_HeatIndicator] ([HeatIndicator_Value], [DailyReadingID]) VALUES (@HeatIndicator_Value, @DailyReadingID);
SELECT HeatIndicator_Value, DailyReadingID, HeatIndicatorID FROM pnf.DailyReadings_HeatIndicator WHERE (HeatIndicatorID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@HeatIndicator_Value" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="HeatIndicator_Value" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DailyReadingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DailyReadingID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT HeatIndicator_Value, DailyReadingID, HeatIndicatorID FROM pnf.DailyReadings_HeatIndicator</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [pnf].[DailyReadings_HeatIndicator] SET [HeatIndicator_Value] = @HeatIndicator_Value, [DailyReadingID] = @DailyReadingID WHERE (([HeatIndicator_Value] = @Original_HeatIndicator_Value) AND ([DailyReadingID] = @Original_DailyReadingID) AND ([HeatIndicatorID] = @Original_HeatIndicatorID));
SELECT HeatIndicator_Value, DailyReadingID, HeatIndicatorID FROM pnf.DailyReadings_HeatIndicator WHERE (HeatIndicatorID = @HeatIndicatorID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@HeatIndicator_Value" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="HeatIndicator_Value" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DailyReadingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DailyReadingID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_HeatIndicator_Value" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="HeatIndicator_Value" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DailyReadingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DailyReadingID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_HeatIndicatorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HeatIndicatorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="HeatIndicatorID" ColumnName="HeatIndicatorID" DataSourceName="TAS.pnf.DailyReadings_HeatIndicator" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@HeatIndicatorID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="HeatIndicatorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="HeatIndicator_Value" DataSetColumn="HeatIndicator_Value" />
              <Mapping SourceColumn="DailyReadingID" DataSetColumn="DailyReadingID" />
              <Mapping SourceColumn="HeatIndicatorID" DataSetColumn="HeatIndicatorID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DailyReadings_HeatIndicator1TableAdapter" GeneratorDataComponentClassName="DailyReadings_HeatIndicator1TableAdapter" Name="DailyReadings_HeatIndicator1" UserDataComponentName="DailyReadings_HeatIndicator1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TASConnectionString (Settings)" DbObjectName="TAS.pnf.DailyReadings_HeatIndicator" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [DailyReadings_HeatIndicator] WHERE (([DailyReadingID] = @Original_DailyReadingID) AND ([HeatIndicator_Value] = @Original_HeatIndicator_Value) AND ([HeatIndicatorID] = @Original_HeatIndicatorID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DailyReadingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DailyReadingID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_HeatIndicator_Value" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="HeatIndicator_Value" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_HeatIndicatorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HeatIndicatorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [DailyReadings_HeatIndicator] ([DailyReadingID], [HeatIndicator_Value]) VALUES (@DailyReadingID, @HeatIndicator_Value);
SELECT DailyReadingID, HeatIndicator_Value, HeatIndicatorID FROM DailyReadings_HeatIndicator WHERE (HeatIndicatorID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DailyReadingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DailyReadingID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@HeatIndicator_Value" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="HeatIndicator_Value" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DailyReadingID, HeatIndicator_Value, HeatIndicatorID FROM DailyReadings_HeatIndicator</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [DailyReadings_HeatIndicator] SET [DailyReadingID] = @DailyReadingID, [HeatIndicator_Value] = @HeatIndicator_Value WHERE (([DailyReadingID] = @Original_DailyReadingID) AND ([HeatIndicator_Value] = @Original_HeatIndicator_Value) AND ([HeatIndicatorID] = @Original_HeatIndicatorID));
SELECT DailyReadingID, HeatIndicator_Value, HeatIndicatorID FROM DailyReadings_HeatIndicator WHERE (HeatIndicatorID = @HeatIndicatorID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DailyReadingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DailyReadingID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@HeatIndicator_Value" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="HeatIndicator_Value" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DailyReadingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DailyReadingID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_HeatIndicator_Value" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="HeatIndicator_Value" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_HeatIndicatorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HeatIndicatorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="HeatIndicatorID" ColumnName="HeatIndicatorID" DataSourceName="TAS.pnf.DailyReadings_HeatIndicator" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@HeatIndicatorID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="HeatIndicatorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="DailyReadingID" DataSetColumn="DailyReadingID" />
              <Mapping SourceColumn="HeatIndicator_Value" DataSetColumn="HeatIndicator_Value" />
              <Mapping SourceColumn="HeatIndicatorID" DataSetColumn="HeatIndicatorID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GetMarketAssessmentReportDataTableAdapter" GeneratorDataComponentClassName="GetMarketAssessmentReportDataTableAdapter" Name="GetMarketAssessmentReportData" UserDataComponentName="GetMarketAssessmentReportDataTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TASConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>select c.Symbol , ReadingDate, Indicator, IndicatorHasChanged, IsInRedZone, IsBreakout, IsPullBack, IsNull(b.HeatIndicator_Value,0) as HeatIndicator_Value
from [pnf].[DailyReadings_PrimaryPNFIndicators] a
LEFT JOIN [pnf].[DailyReadings_HeatIndicator] b on a.ReadingID = b.DailyReadingID
join pnf.Symbols c on a.SymbolID = c.SymbolID
where a.ReadingDate = @ReadingDate</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ReadingDate" ColumnName="ReadingDate" DataSourceName="TAS.pnf.DailyReadings_PrimaryPNFIndicators" DataTypeServer="date" DbType="Date" Direction="Input" ParameterName="@ReadingDate" Precision="0" ProviderType="DateTime" Scale="0" Size="3" SourceColumn="ReadingDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Symbol" DataSetColumn="Symbol" />
              <Mapping SourceColumn="ReadingDate" DataSetColumn="ReadingDate" />
              <Mapping SourceColumn="Indicator" DataSetColumn="Indicator" />
              <Mapping SourceColumn="IndicatorHasChanged" DataSetColumn="IndicatorHasChanged" />
              <Mapping SourceColumn="IsInRedZone" DataSetColumn="IsInRedZone" />
              <Mapping SourceColumn="IsBreakout" DataSetColumn="IsBreakout" />
              <Mapping SourceColumn="IsPullBack" DataSetColumn="IsPullBack" />
              <Mapping SourceColumn="HeatIndicator_Value" DataSetColumn="HeatIndicator_Value" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="TASds2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="TASds2" msprop:Generator_UserDSName="TASds2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="dtPNFDailyIndicators" msprop:Generator_TableClassName="dtPNFDailyIndicatorsDataTable" msprop:Generator_TableVarName="tabledtPNFDailyIndicators" msprop:Generator_RowChangedName="dtPNFDailyIndicatorsRowChanged" msprop:Generator_TablePropName="dtPNFDailyIndicators" msprop:Generator_RowDeletingName="dtPNFDailyIndicatorsRowDeleting" msprop:Generator_RowChangingName="dtPNFDailyIndicatorsRowChanging" msprop:Generator_RowEvHandlerName="dtPNFDailyIndicatorsRowChangeEventHandler" msprop:Generator_RowDeletedName="dtPNFDailyIndicatorsRowDeleted" msprop:Generator_RowClassName="dtPNFDailyIndicatorsRow" msprop:Generator_UserTableName="dtPNFDailyIndicators" msprop:Generator_RowEvArgName="dtPNFDailyIndicatorsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ReadingID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnReadingID" msprop:Generator_ColumnPropNameInRow="ReadingID" msprop:Generator_ColumnPropNameInTable="ReadingIDColumn" msprop:Generator_UserColumnName="ReadingID" type="xs:int" />
              <xs:element name="ReadingDate" msprop:Generator_ColumnVarNameInTable="columnReadingDate" msprop:Generator_ColumnPropNameInRow="ReadingDate" msprop:Generator_ColumnPropNameInTable="ReadingDateColumn" msprop:Generator_UserColumnName="ReadingDate" type="xs:dateTime" />
              <xs:element name="SymbolID" msprop:Generator_ColumnVarNameInTable="columnSymbolID" msprop:Generator_ColumnPropNameInRow="SymbolID" msprop:Generator_ColumnPropNameInTable="SymbolIDColumn" msprop:Generator_UserColumnName="SymbolID" type="xs:int" />
              <xs:element name="Indicator" msprop:Generator_ColumnVarNameInTable="columnIndicator" msprop:Generator_ColumnPropNameInRow="Indicator" msprop:Generator_ColumnPropNameInTable="IndicatorColumn" msprop:Generator_UserColumnName="Indicator">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IndicatorHasChanged" msprop:Generator_ColumnVarNameInTable="columnIndicatorHasChanged" msprop:Generator_ColumnPropNameInRow="IndicatorHasChanged" msprop:Generator_ColumnPropNameInTable="IndicatorHasChangedColumn" msprop:Generator_UserColumnName="IndicatorHasChanged" type="xs:boolean" />
              <xs:element name="IsInRedZone" msprop:Generator_ColumnVarNameInTable="columnIsInRedZone" msprop:Generator_ColumnPropNameInRow="IsInRedZone" msprop:Generator_ColumnPropNameInTable="IsInRedZoneColumn" msprop:Generator_UserColumnName="IsInRedZone" type="xs:boolean" />
              <xs:element name="IsBreakout" msprop:Generator_ColumnVarNameInTable="columnIsBreakout" msprop:Generator_ColumnPropNameInRow="IsBreakout" msprop:Generator_ColumnPropNameInTable="IsBreakoutColumn" msprop:Generator_UserColumnName="IsBreakout" type="xs:boolean" />
              <xs:element name="IsPullBack" msprop:Generator_ColumnVarNameInTable="columnIsPullBack" msprop:Generator_ColumnPropNameInRow="IsPullBack" msprop:Generator_ColumnPropNameInTable="IsPullBackColumn" msprop:Generator_UserColumnName="IsPullBack" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="dtSymbols" msprop:Generator_TableClassName="dtSymbolsDataTable" msprop:Generator_TableVarName="tabledtSymbols" msprop:Generator_RowChangedName="dtSymbolsRowChanged" msprop:Generator_TablePropName="dtSymbols" msprop:Generator_RowDeletingName="dtSymbolsRowDeleting" msprop:Generator_RowChangingName="dtSymbolsRowChanging" msprop:Generator_RowEvHandlerName="dtSymbolsRowChangeEventHandler" msprop:Generator_RowDeletedName="dtSymbolsRowDeleted" msprop:Generator_RowClassName="dtSymbolsRow" msprop:Generator_UserTableName="dtSymbols" msprop:Generator_RowEvArgName="dtSymbolsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SymbolID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnSymbolID" msprop:Generator_ColumnPropNameInRow="SymbolID" msprop:Generator_ColumnPropNameInTable="SymbolIDColumn" msprop:Generator_UserColumnName="SymbolID" type="xs:int" />
              <xs:element name="Symbol" msprop:Generator_ColumnVarNameInTable="columnSymbol" msprop:Generator_ColumnPropNameInRow="Symbol" msprop:Generator_ColumnPropNameInTable="SymbolColumn" msprop:Generator_UserColumnName="Symbol">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SymbolDescr" msprop:Generator_ColumnVarNameInTable="columnSymbolDescr" msprop:Generator_ColumnPropNameInRow="SymbolDescr" msprop:Generator_ColumnPropNameInTable="SymbolDescrColumn" msprop:Generator_UserColumnName="SymbolDescr" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SymbolTypeID" msprop:Generator_ColumnVarNameInTable="columnSymbolTypeID" msprop:Generator_ColumnPropNameInRow="SymbolTypeID" msprop:Generator_ColumnPropNameInTable="SymbolTypeIDColumn" msprop:Generator_UserColumnName="SymbolTypeID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DailyReadings" msprop:Generator_TableClassName="DailyReadingsDataTable" msprop:Generator_TableVarName="tableDailyReadings" msprop:Generator_RowChangedName="DailyReadingsRowChanged" msprop:Generator_TablePropName="DailyReadings" msprop:Generator_RowDeletingName="DailyReadingsRowDeleting" msprop:Generator_RowChangingName="DailyReadingsRowChanging" msprop:Generator_RowEvHandlerName="DailyReadingsRowChangeEventHandler" msprop:Generator_RowDeletedName="DailyReadingsRowDeleted" msprop:Generator_RowClassName="DailyReadingsRow" msprop:Generator_UserTableName="DailyReadings" msprop:Generator_RowEvArgName="DailyReadingsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ReadingID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnReadingID" msprop:Generator_ColumnPropNameInRow="ReadingID" msprop:Generator_ColumnPropNameInTable="ReadingIDColumn" msprop:Generator_UserColumnName="ReadingID" type="xs:int" />
              <xs:element name="ReadingDate" msprop:Generator_ColumnVarNameInTable="columnReadingDate" msprop:Generator_ColumnPropNameInRow="ReadingDate" msprop:Generator_ColumnPropNameInTable="ReadingDateColumn" msprop:Generator_UserColumnName="ReadingDate" type="xs:dateTime" />
              <xs:element name="SymbolID" msprop:Generator_ColumnVarNameInTable="columnSymbolID" msprop:Generator_ColumnPropNameInRow="SymbolID" msprop:Generator_ColumnPropNameInTable="SymbolIDColumn" msprop:Generator_UserColumnName="SymbolID" type="xs:int" />
              <xs:element name="Indicator" msprop:Generator_ColumnVarNameInTable="columnIndicator" msprop:Generator_ColumnPropNameInRow="Indicator" msprop:Generator_ColumnPropNameInTable="IndicatorColumn" msprop:Generator_UserColumnName="Indicator">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IndicatorHasChanged" msprop:Generator_ColumnVarNameInTable="columnIndicatorHasChanged" msprop:Generator_ColumnPropNameInRow="IndicatorHasChanged" msprop:Generator_ColumnPropNameInTable="IndicatorHasChangedColumn" msprop:Generator_UserColumnName="IndicatorHasChanged" type="xs:boolean" />
              <xs:element name="IsInRedZone" msprop:Generator_ColumnVarNameInTable="columnIsInRedZone" msprop:Generator_ColumnPropNameInRow="IsInRedZone" msprop:Generator_ColumnPropNameInTable="IsInRedZoneColumn" msprop:Generator_UserColumnName="IsInRedZone" type="xs:boolean" />
              <xs:element name="IsBreakout" msprop:Generator_ColumnVarNameInTable="columnIsBreakout" msprop:Generator_ColumnPropNameInRow="IsBreakout" msprop:Generator_ColumnPropNameInTable="IsBreakoutColumn" msprop:Generator_UserColumnName="IsBreakout" type="xs:boolean" />
              <xs:element name="IsPullBack" msprop:Generator_ColumnVarNameInTable="columnIsPullBack" msprop:Generator_ColumnPropNameInRow="IsPullBack" msprop:Generator_ColumnPropNameInTable="IsPullBackColumn" msprop:Generator_UserColumnName="IsPullBack" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DailyReadings_HeatIndicator" msprop:Generator_TableClassName="DailyReadings_HeatIndicatorDataTable" msprop:Generator_TableVarName="tableDailyReadings_HeatIndicator" msprop:Generator_RowChangedName="DailyReadings_HeatIndicatorRowChanged" msprop:Generator_TablePropName="DailyReadings_HeatIndicator" msprop:Generator_RowDeletingName="DailyReadings_HeatIndicatorRowDeleting" msprop:Generator_RowChangingName="DailyReadings_HeatIndicatorRowChanging" msprop:Generator_RowEvHandlerName="DailyReadings_HeatIndicatorRowChangeEventHandler" msprop:Generator_RowDeletedName="DailyReadings_HeatIndicatorRowDeleted" msprop:Generator_RowClassName="DailyReadings_HeatIndicatorRow" msprop:Generator_UserTableName="DailyReadings_HeatIndicator" msprop:Generator_RowEvArgName="DailyReadings_HeatIndicatorRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="HeatIndicator_Value" msprop:Generator_ColumnVarNameInTable="columnHeatIndicator_Value" msprop:Generator_ColumnPropNameInRow="HeatIndicator_Value" msprop:Generator_ColumnPropNameInTable="HeatIndicator_ValueColumn" msprop:Generator_UserColumnName="HeatIndicator_Value" type="xs:unsignedByte" />
              <xs:element name="DailyReadingID" msprop:Generator_ColumnVarNameInTable="columnDailyReadingID" msprop:Generator_ColumnPropNameInRow="DailyReadingID" msprop:Generator_ColumnPropNameInTable="DailyReadingIDColumn" msprop:Generator_UserColumnName="DailyReadingID" type="xs:int" />
              <xs:element name="HeatIndicatorID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnHeatIndicatorID" msprop:Generator_ColumnPropNameInRow="HeatIndicatorID" msprop:Generator_ColumnPropNameInTable="HeatIndicatorIDColumn" msprop:Generator_UserColumnName="HeatIndicatorID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DailyReadings_HeatIndicator1" msprop:Generator_TableClassName="DailyReadings_HeatIndicator1DataTable" msprop:Generator_TableVarName="tableDailyReadings_HeatIndicator1" msprop:Generator_TablePropName="DailyReadings_HeatIndicator1" msprop:Generator_RowDeletingName="DailyReadings_HeatIndicator1RowDeleting" msprop:Generator_RowChangingName="DailyReadings_HeatIndicator1RowChanging" msprop:Generator_RowEvHandlerName="DailyReadings_HeatIndicator1RowChangeEventHandler" msprop:Generator_RowDeletedName="DailyReadings_HeatIndicator1RowDeleted" msprop:Generator_UserTableName="DailyReadings_HeatIndicator1" msprop:Generator_RowChangedName="DailyReadings_HeatIndicator1RowChanged" msprop:Generator_RowEvArgName="DailyReadings_HeatIndicator1RowChangeEvent" msprop:Generator_RowClassName="DailyReadings_HeatIndicator1Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="DailyReadingID" msprop:Generator_ColumnVarNameInTable="columnDailyReadingID" msprop:Generator_ColumnPropNameInRow="DailyReadingID" msprop:Generator_ColumnPropNameInTable="DailyReadingIDColumn" msprop:Generator_UserColumnName="DailyReadingID" type="xs:int" />
              <xs:element name="HeatIndicator_Value" msprop:Generator_ColumnVarNameInTable="columnHeatIndicator_Value" msprop:Generator_ColumnPropNameInRow="HeatIndicator_Value" msprop:Generator_ColumnPropNameInTable="HeatIndicator_ValueColumn" msprop:Generator_UserColumnName="HeatIndicator_Value" type="xs:unsignedByte" />
              <xs:element name="HeatIndicatorID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnHeatIndicatorID" msprop:Generator_ColumnPropNameInRow="HeatIndicatorID" msprop:Generator_ColumnPropNameInTable="HeatIndicatorIDColumn" msprop:Generator_UserColumnName="HeatIndicatorID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="GetMarketAssessmentReportData" msprop:Generator_TableClassName="GetMarketAssessmentReportDataDataTable" msprop:Generator_TableVarName="tableGetMarketAssessmentReportData" msprop:Generator_TablePropName="GetMarketAssessmentReportData" msprop:Generator_RowDeletingName="GetMarketAssessmentReportDataRowDeleting" msprop:Generator_RowChangingName="GetMarketAssessmentReportDataRowChanging" msprop:Generator_RowEvHandlerName="GetMarketAssessmentReportDataRowChangeEventHandler" msprop:Generator_RowDeletedName="GetMarketAssessmentReportDataRowDeleted" msprop:Generator_UserTableName="GetMarketAssessmentReportData" msprop:Generator_RowChangedName="GetMarketAssessmentReportDataRowChanged" msprop:Generator_RowEvArgName="GetMarketAssessmentReportDataRowChangeEvent" msprop:Generator_RowClassName="GetMarketAssessmentReportDataRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Symbol" msprop:Generator_ColumnVarNameInTable="columnSymbol" msprop:Generator_ColumnPropNameInRow="Symbol" msprop:Generator_ColumnPropNameInTable="SymbolColumn" msprop:Generator_UserColumnName="Symbol">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ReadingDate" msprop:Generator_ColumnVarNameInTable="columnReadingDate" msprop:Generator_ColumnPropNameInRow="ReadingDate" msprop:Generator_ColumnPropNameInTable="ReadingDateColumn" msprop:Generator_UserColumnName="ReadingDate" type="xs:dateTime" />
              <xs:element name="Indicator" msprop:Generator_ColumnVarNameInTable="columnIndicator" msprop:Generator_ColumnPropNameInRow="Indicator" msprop:Generator_ColumnPropNameInTable="IndicatorColumn" msprop:Generator_UserColumnName="Indicator">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IndicatorHasChanged" msprop:Generator_ColumnVarNameInTable="columnIndicatorHasChanged" msprop:Generator_ColumnPropNameInRow="IndicatorHasChanged" msprop:Generator_ColumnPropNameInTable="IndicatorHasChangedColumn" msprop:Generator_UserColumnName="IndicatorHasChanged" type="xs:boolean" />
              <xs:element name="IsInRedZone" msprop:Generator_ColumnVarNameInTable="columnIsInRedZone" msprop:Generator_ColumnPropNameInRow="IsInRedZone" msprop:Generator_ColumnPropNameInTable="IsInRedZoneColumn" msprop:Generator_UserColumnName="IsInRedZone" type="xs:boolean" />
              <xs:element name="IsBreakout" msprop:Generator_ColumnVarNameInTable="columnIsBreakout" msprop:Generator_ColumnPropNameInRow="IsBreakout" msprop:Generator_ColumnPropNameInTable="IsBreakoutColumn" msprop:Generator_UserColumnName="IsBreakout" type="xs:boolean" />
              <xs:element name="IsPullBack" msprop:Generator_ColumnVarNameInTable="columnIsPullBack" msprop:Generator_ColumnPropNameInRow="IsPullBack" msprop:Generator_ColumnPropNameInTable="IsPullBackColumn" msprop:Generator_UserColumnName="IsPullBack" type="xs:boolean" />
              <xs:element name="HeatIndicator_Value" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnHeatIndicator_Value" msprop:Generator_ColumnPropNameInRow="HeatIndicator_Value" msprop:Generator_ColumnPropNameInTable="HeatIndicator_ValueColumn" msprop:Generator_UserColumnName="HeatIndicator_Value" type="xs:short" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:dtPNFDailyIndicators" />
      <xs:field xpath="mstns:ReadingDate" />
      <xs:field xpath="mstns:SymbolID" />
    </xs:unique>
    <xs:unique name="dtSymbols_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:dtSymbols" />
      <xs:field xpath="mstns:SymbolID" />
    </xs:unique>
    <xs:unique name="DailyReadings_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DailyReadings" />
      <xs:field xpath="mstns:ReadingDate" />
      <xs:field xpath="mstns:SymbolID" />
    </xs:unique>
    <xs:unique name="Constraint2">
      <xs:selector xpath=".//mstns:DailyReadings" />
      <xs:field xpath="mstns:ReadingID" />
    </xs:unique>
    <xs:unique name="DailyReadings_HeatIndicator_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DailyReadings_HeatIndicator" />
      <xs:field xpath="mstns:HeatIndicatorID" />
    </xs:unique>
    <xs:unique name="DailyReadings_HeatIndicator1_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DailyReadings_HeatIndicator1" />
      <xs:field xpath="mstns:HeatIndicatorID" />
    </xs:unique>
    <xs:keyref name="FK_DailyReadings_HeatIndicator_DailyReadings_PrimaryPNFIndicators" refer="Constraint2" msprop:rel_Generator_UserChildTable="DailyReadings_HeatIndicator" msprop:rel_Generator_ChildPropName="GetDailyReadings_HeatIndicatorRows" msprop:rel_Generator_UserRelationName="FK_DailyReadings_HeatIndicator_DailyReadings_PrimaryPNFIndicators" msprop:rel_Generator_RelationVarName="relationFK_DailyReadings_HeatIndicator_DailyReadings_PrimaryPNFIndicators" msprop:rel_Generator_UserParentTable="DailyReadings" msprop:rel_Generator_ParentPropName="DailyReadingsRow" msdata:UpdateRule="None" msdata:DeleteRule="None">
      <xs:selector xpath=".//mstns:DailyReadings_HeatIndicator" />
      <xs:field xpath="mstns:DailyReadingID" />
    </xs:keyref>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_DailyReadings_PrimaryPNFIndicators_Symbols" msdata:parent="dtSymbols" msdata:child="DailyReadings" msdata:parentkey="SymbolID" msdata:childkey="SymbolID" msprop:Generator_UserChildTable="DailyReadings" msprop:Generator_ChildPropName="GetDailyReadingsRows" msprop:Generator_UserRelationName="FK_DailyReadings_PrimaryPNFIndicators_Symbols" msprop:Generator_RelationVarName="relationFK_DailyReadings_PrimaryPNFIndicators_Symbols" msprop:Generator_UserParentTable="dtSymbols" msprop:Generator_ParentPropName="dtSymbolsRow" />
      <msdata:Relationship name="FK_DailyReadings_HeatIndicator_DailyReadings_PrimaryPNFIndicators1" msdata:parent="dtPNFDailyIndicators" msdata:child="DailyReadings_HeatIndicator" msdata:parentkey="ReadingID" msdata:childkey="DailyReadingID" msprop:Generator_UserChildTable="DailyReadings_HeatIndicator" msprop:Generator_ChildPropName="GetDailyReadings_HeatIndicatorRows" msprop:Generator_UserRelationName="FK_DailyReadings_HeatIndicator_DailyReadings_PrimaryPNFIndicators1" msprop:Generator_ParentPropName="dtPNFDailyIndicatorsRow" msprop:Generator_RelationVarName="relationFK_DailyReadings_HeatIndicator_DailyReadings_PrimaryPNFIndicators1" msprop:Generator_UserParentTable="dtPNFDailyIndicators" />
      <msdata:Relationship name="FK_DailyReadings_PrimaryPNFIndicators_Symbols1" msdata:parent="dtSymbols" msdata:child="dtPNFDailyIndicators" msdata:parentkey="SymbolID" msdata:childkey="SymbolID" msprop:Generator_UserChildTable="dtPNFDailyIndicators" msprop:Generator_ChildPropName="GetdtPNFDailyIndicatorsRows" msprop:Generator_UserRelationName="FK_DailyReadings_PrimaryPNFIndicators_Symbols1" msprop:Generator_RelationVarName="relationFK_DailyReadings_PrimaryPNFIndicators_Symbols1" msprop:Generator_UserParentTable="dtSymbols" msprop:Generator_ParentPropName="dtSymbolsRow" />
      <msdata:Relationship name="FK_DailyReadings_HeatIndicator_DailyReadings_PrimaryPNFIndicators2" msdata:parent="dtPNFDailyIndicators" msdata:child="DailyReadings_HeatIndicator1" msdata:parentkey="ReadingID" msdata:childkey="DailyReadingID" msprop:Generator_UserChildTable="DailyReadings_HeatIndicator1" msprop:Generator_ChildPropName="GetDailyReadings_HeatIndicator1Rows" msprop:Generator_UserRelationName="FK_DailyReadings_HeatIndicator_DailyReadings_PrimaryPNFIndicators2" msprop:Generator_ParentPropName="dtPNFDailyIndicatorsRow" msprop:Generator_RelationVarName="relationFK_DailyReadings_HeatIndicator_DailyReadings_PrimaryPNFIndicators2" msprop:Generator_UserParentTable="dtPNFDailyIndicators" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>